# Docker Compose Configuration for Production Deployment
version: '3.8'

services:
  web:
    build: .
    container_name: shipping-gui-web
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shipping-network

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: shipping-gui-redis
  #   restart: unless-stopped
  #   networks:
  #     - shipping-network

  # Optional: PostgreSQL database (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: shipping-gui-db
  #   environment:
  #     POSTGRES_DB: shipping_gui
  #     POSTGRES_USER: shipping
  #     POSTGRES_PASSWORD: your-secure-password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - shipping-network

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: shipping-gui-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - shipping-network

networks:
  shipping-network:
    driver: bridge

volumes:
  postgres_data:
